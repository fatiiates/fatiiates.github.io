{"ast":null,"code":"var _jsxFileName = \"/home/fatih/github/fatiiates.github.io/src/components/Terminal.jsx\";\nimport React from \"react\";\nimport Terminal, { ColorMode, LineType } from 'react-terminal-ui';\n\nclass TerminalUI extends React.Component {\n  constructor() {\n    super();\n    this.commands = {\n      'help': ['Hmm, someone needs help :)'],\n      'ls': ['linkedin instagram resume_en resume_tr '],\n      'default': ['Unrecognized command, please use help command!']\n    };\n\n    this.onInput = terminalInput => {\n      this.setState(state => {\n        var val = [{\n          type: LineType.Input,\n          value: terminalInput\n        }];\n        var inputCommand = terminalInput.split(\" \");\n        var firstCommand = inputCommand[0];\n        if (firstCommand === 'clear') return {\n          terminalLineData: []\n        };\n\n        if (firstCommand === \"cat\") {\n          val.push({\n            type: LineType.Output,\n            value: this.commands['default']\n          });\n        } else if (this.commands[terminalInput] !== undefined) {\n          for (const iterator of this.commands[terminalInput]) {\n            val.push({\n              type: LineType.Output,\n              value: iterator\n            });\n          }\n        } else {\n          val.push({\n            type: LineType.Output,\n            value: this.commands['default']\n          });\n        }\n\n        return {\n          terminalLineData: [...state.terminalLineData, ...val]\n        };\n      });\n    };\n\n    this.state = {\n      terminalLineData: [{\n        type: LineType.Output,\n        value: '==================Info START=================='\n      }, {\n        type: LineType.Output,\n        value: '- You are on the /home/fatiiates directory now.'\n      }, {\n        type: LineType.Output,\n        value: '- Contact me, if you can.'\n      }, {\n        type: LineType.Output,\n        value: '- Probably you\\'ll need help command.'\n      }, {\n        type: LineType.Output,\n        value: '===================Info END==================='\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Terminal, {\n      name: \"tati@fatiiates\",\n      colorMode: ColorMode.Dark,\n      lineData: this.state.terminalLineData,\n      onInput: this.onInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default TerminalUI;","map":{"version":3,"sources":["/home/fatih/github/fatiiates.github.io/src/components/Terminal.jsx"],"names":["React","Terminal","ColorMode","LineType","TerminalUI","Component","constructor","commands","onInput","terminalInput","setState","state","val","type","Input","value","inputCommand","split","firstCommand","terminalLineData","push","Output","undefined","iterator","render","Dark"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Terminal, { ColorMode, LineType } from 'react-terminal-ui';\n \nclass TerminalUI extends React.Component {\n  constructor() {\n    super();\n    this.state = { \n      terminalLineData: [\n        {type: LineType.Output, value: '==================Info START=================='},\n        {type: LineType.Output, value: '- You are on the /home/fatiiates directory now.'},\n        {type: LineType.Output, value: '- Contact me, if you can.'},\n        {type: LineType.Output, value: '- Probably you\\'ll need help command.'},\n        {type: LineType.Output, value: '===================Info END==================='},\n      ]\n    };\n  }\n\n  commands = {\n    'help': ['Hmm, someone needs help :)'],\n    'ls' : ['linkedin instagram resume_en resume_tr '],\n    'default': ['Unrecognized command, please use help command!'],\n   }\n\n  onInput = (terminalInput) => {\n    this.setState(state => {\n      var val = [\n        {\n          type: LineType.Input,\n          value: terminalInput\n        }\n      ]\n\n      var inputCommand = terminalInput.split(\" \")\n      var firstCommand = inputCommand[0]\n       \n      if (firstCommand === 'clear') \n        return {\n          terminalLineData: []\n        }\n\n      if (firstCommand === \"cat\") {\n        val.push({\n          type: LineType.Output,\n          value: this.commands['default']\n        })\n      } else if (this.commands[terminalInput] !== undefined) {\n         \n        for (const iterator of this.commands[terminalInput]) {\n           \n          val.push( {\n            type: LineType.Output,\n            value: iterator\n          })\n        }\n  \n      }else {\n        val.push( {\n          type: LineType.Output,\n          value: this.commands['default']\n        })\n      }\n\n      return {\n        terminalLineData: [...state.terminalLineData, ...val]\n      }\n\n    })  \n  }\n \n  render() {\n    return (\n      <div className=\"container\">\n        <Terminal \n          name='tati@fatiiates' \n          colorMode={ ColorMode.Dark }  \n          lineData={ this.state.terminalLineData } \n \n          onInput={this.onInput}\n        />\n      </div>\n    )\n  }\n}\n\nexport default TerminalUI;"]},"metadata":{},"sourceType":"module"}